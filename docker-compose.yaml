version: "3"

services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_KRAFT_MODE=true
  
  influxdb:
    image: influxdb:latest
    restart: always
    ports:
      - '8086:8086'
    environment:
      - DOCKER_INFLUXDB_INIT_USERNAME=krajesh
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=trade_engine
      - DOCKER_INFLUXDB_INIT_BUCKET=data_engine
    volumes:
      - myInfluxVolume:/var/lib/influxdb2
  
  spark_consumer:
    build:
      context: ./docker/spark_consumer
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - influxdb
      - kafka_producer
  
  kafka_producer:
    build:
      context: ./docker/kafka_producer
      dockerfile: Dockerfile
    depends_on:
      - kafka

volumes:
  myInfluxVolume: {}


    

    

  
